name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies on ubuntu
      if: startsWith(matrix.os, 'ubuntu')
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        sudo apt-get install cmake
        cmake --version
        gcc --version
        gh release download -R catchorg/Catch2 v3.0.1 --archive=tar.gz
        tar -zxf Catch2*.tar.gz && cd Catch2-3.0.1
        mkdir build && cd build
        cmake ..
        sudo make install

    - name: Install dependencies on macos
      if: startsWith(matrix.os, 'macos')
      run: |
        brew install cmake catch2
        cmake --version
        clang --version
        
    - name: Install dependencies on windows
      if: startsWith(matrix.os, 'windows')
      run: |
        # choco install catch2 -y
        cmake --version
        clang --version

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
